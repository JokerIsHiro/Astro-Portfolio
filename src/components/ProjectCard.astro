---
interface Project {
  title: string;
  image: string;
  description: string;
  languages: string[];
  repo: string;
}

const projects = await Promise.all(
  Object.entries(
    import.meta.glob<{ frontmatter: Project }>("../projects/*.md")
  ).map(async ([, resolver]) => {
    const { frontmatter } = await resolver();
    return frontmatter;
  })
);
---

<h3 class="text-black dark:text-white items-center text-center font-bold text-2xl">MIS PROYECTOS</h3>
<div class="grid grid-cols-3 gap-4 p-4 text-black dark:text-white text-center items-center justify-center">
  {
    projects.map((project, index) => (
      <div id="project-card"
        class="bg-[#FFD19A] dark:bg-[#0B1A2B] grid grid-cols-1 p-4 rounded-lg shadow-md h-[210px] cursor-pointer text-black dark:text-white items-center text-center justify-center"
        data-index={index}
        data-project={JSON.stringify(project)}
      >
        <img
          src={project.image}
          alt={project.title}
          class="w-full max-h-[128px] rounded justify-center"
        />
        <h3 class="text-black dark:text-white font-semibold text-xs md:text-sm break-words">{project.title}</h3>
      </div>
    ))
    }
</div>

<p id="project-hint" class="p-4 text-black dark:text-white text-center text-2xl">Selecciona un Proyecto para ver los detalles</p>

<div id="project-details" class="hidden p-4 rounded-lg text-black dark:text-white">
  <div class="project-info flex space-x-4">
    <div class="flex items-center justify-center shadow-md">
      <img id="project-img"src="" alt="Foto de perfil" class="p-4 rounded-lg flex items-center justify-center shadow-md bg-[#FFD19A] dark:bg-[#0B1A2B] w-full max-h-[175px]"/>
    </div>
    <div class="bg-[#FFD19A] dark:bg-[#0B1A2B] rounded-lg p-4 flex items-center justify-center w-full md:w-full">
      <h1 class="text-2xl font-bold text-center justify-center"></h1>
    </div>
  </div>
  <div class="project-info flex-1">
    <div id="project-description" class="rounded-lg mt-3 mb-3 bg-[#FFD19A] dark:bg-[#0B1A2B] text-black dark:text-white w-full h-fit text-center"></div>
    <div id="project-languages" class="column md:row bg-[#FFD19A] dark:bg-[#0B1A2B] rounded-lg p-4 flex items-center justify-center text-center h-fit w-full md:w-full"></div>
  </div>
</div>


<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    const projectDivs = document.querySelectorAll('[data-index]'); // Seleccionamos todos los divs con el atributo data-index

    const hint = document.getElementById('project-hint');
    const projectDetails = document.getElementById('project-details');

    const projectInfo = document.querySelector('.project-info');

    projectDivs.forEach((div) => {
      div.addEventListener('click', () => {

        hint.classList.add('hidden');
        projectDetails.classList.remove('hidden');
        const projectData = div.getAttribute('data-project'); // Obtenemos los datos del proyecto en formato JSON
        if (projectData) {
          const project = JSON.parse(projectData); // Parseamos los datos a un objeto
          localStorage.setItem('selectedProject', JSON.stringify(project)); 
          
          const projectTitle = projectDetails.querySelector('h1');
          const projectImage = projectDetails.querySelector('#project-img');
          const projectDescription = projectDetails.querySelector('#project-description');
          const projectLanguages = projectDetails.querySelector('#project-languages');

          let imgLanguage = document.createElement('img');

          projectTitle.textContent = project.title;
          projectDescription.textContent = project.description;
          projectImage.src = project.image;

          projectLanguages.innerHTML = project.languagesIcons.map((language) => {
            imgLanguage.src = `${language}`;
            imgLanguage.alt = `${language}`;
            imgLanguage.classList.add('w-[90px]', 'h-fit', 'm-2');
            return imgLanguage.outerHTML;
          }).join('');
        }
      });
    });
  });
</script>


